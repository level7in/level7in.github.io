{"version":3,"sources":["webpack:///./src/templates/tag.js"],"names":["Tags","pageContext","data","tag","allMarkdownRemark","edges","totalCount","siteMetadata","site","tagHeader","title","map","node","slug","fields","frontmatter","key","to","pageQuery"],"mappings":"2FAAA,8GA2DeA,UAnDF,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KACnBC,EAAQF,EAARE,IAD8B,EAERD,EAAKE,kBAA3BC,EAF8B,EAE9BA,MAAOC,EAFuB,EAEvBA,WACPC,EAAiBL,EAAKM,KAAtBD,aACFE,EAAeH,EAAN,YAA4BH,EAA5B,OAEf,OACE,kBAAC,IAAD,CAAQO,MAAOH,EAAaG,OAC1B,kBAAC,IAAD,CAAKA,MAAOP,IACZ,6BACE,4BAAKM,GACL,4BACGJ,EAAMM,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACJC,EAASD,EAAKE,OAAdD,KACAH,EAAUE,EAAKG,YAAfL,MACR,OACE,wBAAIM,IAAKH,GACP,kBAAC,OAAD,CAAMI,GAAIJ,GAAOH,QAKzB,kBAAC,OAAD,CAAMO,GAAG,SAAT,WA+BD,IAAMC,EAAS","file":"component---src-templates-tag-js-faf4fffad2e42c162613.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\n\n// Components\nimport { Link, graphql } from \"gatsby\"\nimport Layout from \"components/layout/layout\"\nimport SEO from \"components/seo\"\n// import style from \"theme/normal.module.less\"\nconst Tags = ({ pageContext, data }) => {\n  const { tag } = pageContext\n  const { edges, totalCount } = data.allMarkdownRemark\n  const { siteMetadata } = data.site\n  const tagHeader = `${totalCount} 篇 文章包含 \"${tag}\" 标签`\n\n  return (\n    <Layout title={siteMetadata.title}>\n      <SEO title={tag} />\n      <div>\n        <h1>{tagHeader}</h1>\n        <ul>\n          {edges.map(({ node }) => {\n            const { slug } = node.fields\n            const { title } = node.frontmatter\n            return (\n              <li key={slug}>\n                <Link to={slug}>{title}</Link>\n              </li>\n            )\n          })}\n        </ul>\n        <Link to=\"/tags\">全部标签</Link>\n      </div>\n    </Layout>\n  )\n}\n\nTags.propTypes = {\n  pageContext: PropTypes.shape({\n    tag: PropTypes.string.isRequired,\n  }),\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      totalCount: PropTypes.number.isRequired,\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n              title: PropTypes.string.isRequired,\n            }),\n            fields: PropTypes.shape({\n              slug: PropTypes.string.isRequired,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n}\n\nexport default Tags\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}