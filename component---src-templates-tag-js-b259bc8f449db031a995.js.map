{"version":3,"sources":["webpack:///./src/templates/tag.js"],"names":["Tags","pageContext","data","tag","allMarkdownRemark","edges","totalCount","siteMetadata","site","title","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","x1","y1","x2","y2","map","node","slug","fields","frontmatter","key","to","pageQuery"],"mappings":"2FAAA,8GAyEeA,UAjEF,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KACnBC,EAAQF,EAARE,IAD8B,EAERD,EAAKE,kBAA3BC,EAF8B,EAE9BA,MAAOC,EAFuB,EAEvBA,WACPC,EAAiBL,EAAKM,KAAtBD,aAER,OACE,kBAAC,IAAD,CAAQE,MAAOF,EAAaE,OAC1B,kBAAC,IAAD,CAAKA,MAAON,IACZ,6BACE,4BACE,yBACEO,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,OAAO,eACPC,YAAY,IACZC,cAAc,QACdC,eAAe,SAEf,0BAAMC,EAAE,mFACR,0BAAMC,GAAG,IAAIC,GAAG,IAAIC,GAAG,OAAOC,GAAG,OAbrC,KAeUpB,EAfV,IAegBG,EAfhB,KAiBA,4BACGD,EAAMmB,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACJC,EAASD,EAAKE,OAAdD,KACAjB,EAAUgB,EAAKG,YAAfnB,MACR,OACE,wBAAIoB,IAAKH,GACP,kBAAC,OAAD,CAAMI,GAAIJ,GAAOjB,WAmC1B,IAAMsB,EAAS","file":"component---src-templates-tag-js-b259bc8f449db031a995.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\n\n// Components\nimport { Link, graphql } from \"gatsby\"\nimport Layout from \"components/layout/layout\"\nimport SEO from \"components/seo\"\n// import style from \"theme/normal.module.less\"\nconst Tags = ({ pageContext, data }) => {\n  const { tag } = pageContext\n  const { edges, totalCount } = data.allMarkdownRemark\n  const { siteMetadata } = data.site\n\n  return (\n    <Layout title={siteMetadata.title}>\n      <SEO title={tag} />\n      <div>\n        <h3>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"20\"\n            height=\"20\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth=\"2\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n          >\n            <path d=\"M20.59 13.41l-7.17 7.17a2 2 0 0 1-2.83 0L2 12V2h10l8.59 8.59a2 2 0 0 1 0 2.82z\"></path>\n            <line x1=\"7\" y1=\"7\" x2=\"7.01\" y2=\"7\"></line>\n          </svg>\n          &nbsp; {tag}（{totalCount}）\n        </h3>\n        <ul>\n          {edges.map(({ node }) => {\n            const { slug } = node.fields\n            const { title } = node.frontmatter\n            return (\n              <li key={slug}>\n                <Link to={slug}>{title}</Link>\n              </li>\n            )\n          })}\n        </ul>\n      </div>\n    </Layout>\n  )\n}\n\nTags.propTypes = {\n  pageContext: PropTypes.shape({\n    tag: PropTypes.string.isRequired,\n  }),\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      totalCount: PropTypes.number.isRequired,\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n              title: PropTypes.string.isRequired,\n            }),\n            fields: PropTypes.shape({\n              slug: PropTypes.string.isRequired,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n}\n\nexport default Tags\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}